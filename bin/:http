#!/bin/sh

http_method() {
    local crud=$1
      if [ "${crud}" = "c" ];      then __="POST"
    elif [ "${crud}" = "r" ];      then __="GET"
    elif [ "${crud}" = "u" ];      then __="PUT"
    elif [ "${crud}" = "d" ];      then __="DELETE"
    elif [ "${crud}" = "GET" ];    then __=${crud}
    elif [ "${crud}" = "POST" ];   then __=${crud}
    elif [ "${crud}" = "PUT" ];    then __=${crud}
    elif [ "${crud}" = "DELETE" ]; then __=${crud}
    else
        bomb_usage "illegal crud method" "[args...]"
    fi
}

http_payload() {
    > ${CRUSTY_RESPONSE} echo '{"CRUSTY_NO_RETURN":"CRUST"}'

    if [ "${CRUSTY_METHOD}" = "POST" -o "${CRUSTY_METHOD}" = "PUT" ]; then
        CRUSTY_DATA="-d ${__payload}"
    fi
}

http_fail() {
    json_is ${__response}
    if [ "$__" = "true" ]; then 
        json_contains ${__response} "errors"; local errors=$__
        json_contains ${__response} "error"; local error=$__
        if [ "${errors}" = "true" ]; then
            json_v ${__response} "errors"
            bomb_fail $@ : $__
        elif [ "${error}" = "true" ]; then
            json_v ${__response} "error"
            bomb_fail $@ : $__
        else
            bomb_fail $@ : ${__response}
        fi
    else
        bomb_fail $@ : ${CRUSTY_RESPONSE}
    fi
}

http_code() {
    local code=`cat ${CRUSTY_HTTPCODE}`

    if [ "${code}" = "000" ]; then
        http_fail "server down or cable loose ... : ${code}"
    fi

    if [ "${code}" = "500" ]; then
        http_fail "looks like an internal server error ... : ${code}"
    fi

    string_startswith ${code} "4"
    if [ "$__" = "true" ]; then
        http_fail "${code}"
    fi

    if [ "${code}" != "${__code}" ]; then
        http_fail "got ${code} expected ${__code}"
    fi
}
