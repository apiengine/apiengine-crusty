#!/bin/sh

array_get() {
    local name=$1
    local pos=$2
    array_bounds ${name} ${pos}
    val_peek ${name}_${pos}
}

array_put() {
    local name=$1
    local pos=$2
    local val=$3
    array_bounds ${name} $2
    val_poke ${name}_${pos} "${val}"
}

array_len() {
    local name=$1
    val_peek ${name}_n
}

array_exists() {
    local name=$1
    array_len ${name}
    if [ "$__" = "" -o "$__" = "\?" ]; then
        bomb_fail "non-existent array ${name}"
    fi
}

array_non_existent() {
    local name=$1
    array_len ${name}
    if [ "$__" != "" -a "$__" = "\?" ]; then
        bomb_fail "array not destroyed ${name}"
    fi
}

array_append() {
    local name=$1
    local val=$2
    array_exists ${name}
    array_len ${name} 
    local len=$__
    local pos=$__
    math_inc "len"
    array_set_len ${name} ${len}
    array_put ${name} ${pos} ${val}
}

array_last() {
    local name=$1
    array_exists ${name}
    array_len $1; local len=$__
    math_dec "len"
    array_get $1 ${len}
}

array_set_len() { # internal use only
    local name=$1
    local val=$2
    val_poke ${name}_n "${val}"
}

array_create() {
    local name=$1
    array_non_existent ${name}
    array_set_len ${name} 0
}

array_destroy() {
    local name=$1
    array_exists ${name}
    array_set_len ${name} "?"
}

array_bounds() {
    local name=$1
    local pos=$2
    array_exists ${name}
    array_len ${name}; local len=$__
    if [ ${len} -gt $2 ]; then
    else
        bomb_fail "index ${pos} out of bounds for array size ${len}"
    fi
}
