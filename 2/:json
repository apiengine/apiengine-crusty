#!/bin/sh

# FIX probably not needed any more
json_munge() {
    local mungee=$1
    __=`echo ${mungee} | sed s'+'\''+\"+g' | sed s'+|+\"+g'`
    # =`echo $__ | sed s'+"true"+true+g' | sed s'+"false"+false+g'`
}

json_v() {
    local json=$1
    local k=$2
    json_check ${json}
    local v=`echo ${json} | jshon -e ${k}`
    __=`echo ${v} | sed s'+^"++g' | sed s'+"$++g'`
}

json_add() {
    local json=$1
    local k=$2
    local v=$3
    json_check ${json}
    json_munge "|${k}|:|${v}|"; local p=$__
    json_empty ${json}
    if [ "$__" = "true" ]; then
        __="{${p}}"
    else
        json_inner ${json}; local inner=$__
        __="{${inner},${p}}"
    fi
}

json_inner() {
    local json=$1
    json_check ${json}
    __=`echo ${json} | sed s'+^{\(.*\)}$+\1+'`
}

json_merge() {
    local l=$1
    local r=$2
    json_inner ${l}; local ll=$__
    json_inner ${r}; local rr=$__
    local merged="{${ll},${rr}}"
    json_empty ${l}
    if [ "$__" = "true" ]; then
        merged=${r}
    fi
    json_empty ${r}
    if [ "$__" = "true" ]; then
        merged=${l}
    fi
    __=${merged}
}

json_is() {
    local json=$1
    string_startswith "{" "${json}"; local s=$__
    string_endswith "}" "${json}"  ; local e=$__
    if [ "${s}" = "true" -a "${e}" = "true" ]; then
        __="true"
    else
        __="false"
    fi
    # FIX [...] is valid json as well as {...}
}

json_check() {
    local json=$1
    json_is ${json}
    if [ "$__" = "false" ]; then
        bomb_fail "not json: ${json}"
    fi
}

json_empty() {
    local json=$1
    json_check ${json}
    json_inner ${json}
    if [ "$__" = "" ]; then
        __="true"
    else
        __="false"
    fi
}
